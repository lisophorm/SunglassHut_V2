<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" viewActivate="view1_activateHandler(event)" 
		creationComplete="view1_creationCompleteHandler(event)" removing="view1_removingHandler(event)" xmlns:components="components.*"  >
	
	<fx:Script>
		<![CDATA[
			import com.alfo.DelayedExecution;
			import com.alfo.UserObject;
			import com.alfo.utils.EncryptWrapper;
			import com.lia.crypto.AES;
			
			import flash.media.StageWebView;
			import flash.net.URLRequest;
			import flash.utils.clearInterval;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.ViewNavigatorEvent;
			
			import events.KioskError;
			import events.UserEvent;
			import events.ViewEvent;
			
			import model.Config;
			
			protected var webView:StageWebView = new StageWebView();
			protected var openBrowser:Boolean = false; 
			// URL Should be: http://www.ignitesocial.co.uk/vf_budapest/
			private var fbScope:String="email,publish_actions";
			//public var fbAppID:String="316759675084824";
			private var fbRedir:String;
			private var fbLogout:String;
			protected var fbAuthURL:String;
			//protected var fbAuthURL:String="https://m.facebook.com/dialog/permissions.request?app_id=252378658153874&display=touch&next=http://www.ignitesocial.co.uk/ignite/php-sdk/examples/landed.php&type=user_agent&perms=email,publish_checkins,publish_stream,offline_access&fbconnect=1&response_type=token";
			
			
			
			public var access_token:String;
			public var currentURN:String;
			public var optin_marketing:Boolean;
			public var optin_terms:Boolean;
			
			public var userVar:UserObject;

			protected var intervallo:Number;
			
			
			protected var pref:Config;
			
			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				
				userVar=UserObject.getInstance();
				
				pref = new Config();
				var facebookAppID:String = pref.prefsXML..facebookAppID;
				var redirect_uri:String = pref.prefsXML..serverIP;
				
				
				fbRedir = (this.parentApplication).baseURL+"php-sdk/examples/landed.php";
				fbLogout = (this.parentApplication).baseURL+"php-sdk/examples/logout.php"; // &display=touch publish_checkins ,offline_access
				//fbAuthURL = "https://graph.facebook.com/oauth/authorize?type=user_agent&scope=email,user_photos,publish_stream,publish_checkins&client_id="+fbAppID+"&display=touch&redirect_uri=http://www.ignitesocial.co.uk/edfenergy/php-sdk/examples/landed.php&response_type=token";
				fbAuthURL = "https://graph.facebook.com/oauth/authorize?type=user_agent&scope=email,publish_actions,user_photos&client_id="+facebookAppID+"&display=touch&redirect_uri=http://"+redirect_uri+"/php-sdk/examples/landed.php&response_type=token"; //&auth_type=reauthenticate
				//var tempo:DelayedExecution=new DelayedExecution(2000,this,createBrowser);
				trace("auth url:"+fbAuthURL);
				createBrowser();
				
			}
			
			protected function view1_activateHandler(event:Event):void
			{
				
				trace("facebook login page"+data.urn);
				//this.navigator.dispatchEvent( new UserEvent( UserEvent.URN, data.urn) );
				currentURN=data.urn;
				optin_marketing = data.optin_marketing;
				optin_terms = data.optin_terms;
				
				//navigator.actionBar.title=data.title;
				
			}
			protected function onURLError(event:ErrorEvent):void
			{
				webView.removeEventListener(LocationChangeEvent.LOCATION_CHANGING,onURLChanging);
				webView.removeEventListener(LocationChangeEvent.LOCATION_CHANGE,onURLChange);	
				webView.removeEventListener( Event.COMPLETE, onURLCompleted);	
				trace("URL error: "+event.text);
				webView.stage  = null;
				this.navigator.dispatchEvent(new KioskError(KioskError.MODAL, event.text, "We're currently experiencing connectivity issues, try again?",ricomincia,createBrowser));
					
			}
			protected function onURLChanging(event:LocationChangeEvent):void
			{
				trace("URL changing: "+event.location);
				//webView.viewPort = new Rectangle(0,0,0,0);
				status_label.text = "URL CHANGING "+event.location;
				webView.stage  =null;
				// Uncomment the following line to load in the default browser instead... 
				//navigateToURL(new URLRequest(event.location));
			}
			
			protected function onURLChange(event:LocationChangeEvent):void
			{
				if(event.location.indexOf("https://www.facebook.com/login.php") != -1) {
					trace("activating cookies");
					//URLRequestDefaults.manageCookies=true;
				}
				trace("URL change: "+event.location);
				var punto:Point=container.localToGlobal(new Point());
				status_label.text = "URL CHANGED "+event.location;
				webView.stage  = null;

				//webView.stage=stage;
				//webView.viewPort = new Rectangle(punto.x, punto.y, container.width, container.height);

				// Uncomment the following line to load in the default browser instead... 
				//navigateToURL(new URLRequest(event.location));
			}
			protected function onURLCompleted( e:Event ):void
			{
				trace("URL complete: "+webView.location);
				
				status_label.text = "URL LOADING COMPLETE";
				webView.stage = stage;
				showURL();
			}
			
			private function showURL():void
			{
				//trace("timer location:"+webView.location);
				var URI:String=webView.location;
				// access token exists in location
				if(webView.location.indexOf("completop.php")!=-1) {
					webView.loadURL(fbAuthURL);
				} else if(webView.location.indexOf("access_token")!=-1) {
					trace("ACCESS TOKEN OBTAINED");
					webView.viewPort = new Rectangle(0, 0, 0, 0);
					//webView.stage=null;
					//URI=URI.replace("#","?");
					trace("URI:"+URI);
					URI=URI.substr(URI.indexOf("#")+1);
					var vars:URLVariables = new URLVariables();
					vars.decode(URI);
					access_token=vars.access_token;
					userVar.token=vars.access_token;
					trace("Access token:"+userVar.token);
					webView.removeEventListener( Event.COMPLETE, onURLCompleted);	

					
					Config.access_token = access_token;
					Config.logout = fbLogout;
					
					logoutCompleted();
					//webView.addEventListener( Event.COMPLETE, logoutCompleted);					
					//webView.loadURL("https://www.facebook.com/logout.php?access_token="+access_token+"&confirm=1&next="+fbLogout);	
				}
				
				// error
				if(webView.location.indexOf("landed.php?error_reason=user_denied")!=-1 && webView.location.indexOf("facebook.com/login.php")==-1) {
					webView.viewPort = new Rectangle(0, 0, 0, 0);
					webView.removeEventListener( Event.COMPLETE, onURLCompleted);	
					webView.removeEventListener(LocationChangeEvent.LOCATION_CHANGE,onURLChange);	
					webView.removeEventListener(LocationChangeEvent.LOCATION_CHANGING,onURLChanging);
					webView.stage=null;
					this.navigator.dispatchEvent(new KioskError(KioskError.ERROR, "You have to install the app and accept the permissions.", "ERROR", ricomincia));
				
				}
			}
			protected function logoutCompleted(e:Event=null):void
			{
				trace("**** LOGOUT COMPLETED ****");
				webView.removeEventListener(LocationChangeEvent.LOCATION_CHANGING,onURLChanging);
				webView.removeEventListener(LocationChangeEvent.LOCATION_CHANGE,onURLChange);	
				webView.removeEventListener( Event.COMPLETE, onURLCompleted);	

				var passVars:Object=new Object();
				passVars.token=EncryptWrapper.Wrap(access_token);
				passVars.urn=EncryptWrapper.Wrap(currentURN); 
				passVars.optInTerms = optin_terms ? 1 : 0;
				passVars.optInMarketing = optin_marketing ? 1 : 0;
				passVars.current_location=userVar.current_location;
				passVars.extraterms=userVar.extraterms ? 1 : 0;
				setToken.send(passVars);
				
				
			}
			protected function exitLogin():void {
				var dato:Object=new Object;
				dato.urn=currentURN;
				//navigator.pushView(views.ExtraInfo,dato);
				this.navigator.dispatchEvent( new ViewEvent( ViewEvent.LOCATION_FACEBOOK_REGISTERED ) );
			}
			protected function onRemove(event:ViewNavigatorEvent):void
			{
				trace("onremove fired");
				
				if(webView!=null) {
					trace("WEBVIEW DISPOSING");
					webView.dispose();
					webView = null;
				} else {
					trace("WEBVIEW already disposed!");
				}
			}
			
			
			
			protected function createBrowser(e:Event=null):void 
			{
				trace("CREATING BROWSER");
				//URLRequestDefaults.manageCookies=false;
				var punto:Point=container.localToGlobal(new Point(0,0));
				
				
				webView.viewPort = new Rectangle(punto.x, punto.y, container.width, container.height);
				busone.x=container.width/2-50;
				busone.y=container.height/2-50;
				webView.addEventListener(ErrorEvent.ERROR, onURLError );
				webView.addEventListener( Event.COMPLETE, onURLCompleted);	 // FIRES WHEN LOADING IS DONE
				webView.addEventListener(LocationChangeEvent.LOCATION_CHANGE,onURLChange);	// NOT ALWAYS FIRING
				webView.addEventListener(LocationChangeEvent.LOCATION_CHANGING,onURLChanging);
				//webView.loadURL(fbAuthURL);
				webView.loadURL("http://"+pref.prefsXML..serverIP+"/forceloggaout.php");
				this.addEventListener(ViewNavigatorEvent.REMOVING,onRemove);
				
			}
			
		
			
			
			protected function httpservice1_resultHandler(event:ResultEvent):void
			{
		
				trace("TOKEN RESULT FROM DATABASE "+setToken.lastResult.result+" "+currentURN);
				
				switch (setToken.lastResult.result)
				{
					case "NO":// Token not found
						this.navigator.dispatchEvent( new ViewEvent( ViewEvent.LOCATION_FACEBOOK ));
						break;
					case "OK":// Token save 
						userVar.facebook=true;
						userVar.firstname=unescape(setToken.lastResult.first_name);
						userVar.lastname=unescape(setToken.lastResult.last_name);
						userVar.email=unescape(setToken.lastResult.email);
						userVar.fb_id=unescape(setToken.lastResult.id);
						userVar.location=unescape(setToken.lastResult.location);
						userVar.hometown=unescape(setToken.lastResult.hometown);
						this.navigator.dispatchEvent( new ViewEvent( ViewEvent.LOCATION_FACEBOOK_REGISTERED ));
						break;
					case "ERROR":
						this.navigator.dispatchEvent(new KioskError(KioskError.ERROR, unescape(setToken.lastResult.message), "ERROR", ricomincia));

						break;
					default:
				}
				
				

			}
			
			protected function httpservice1_faultHandler(event:FaultEvent):void
			{
				trace("failure");
				this.navigator.dispatchEvent(new KioskError(KioskError.ERROR, event.fault.faultString, "FAILURE", ricomincia));
			}
			
			
			protected function view1_removingHandler(event:ViewNavigatorEvent):void
			{
				clearInterval(intervallo);				
			}
			protected function ricomincia(e:Event=null):void
			{

				//NativeApplication.nativeApplication.exit();
				this.navigator.dispatchEvent( new ViewEvent( ViewEvent.LOCATION_RESTART ) );
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:HTTPService id="setToken" resultFormat="flashvars" method="POST" url="{(this.parentApplication).baseURL+'setuser.php'}" result="httpservice1_resultHandler(event)" fault="httpservice1_faultHandler(event)" />
	</fx:Declarations>
	

	<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
		<s:Label id="status_label" includeInLayout="false" text="status" color="0x000000" />
		<s:BorderContainer width="100%" height="100%" id="container">
			<s:BusyIndicator horizontalCenter="0" verticalCenter="0" width="100" height="100" rotationInterval="200" symbolColor="#F383C3" id="busone" />
		</s:BorderContainer>
	</s:VGroup>
</s:View>
