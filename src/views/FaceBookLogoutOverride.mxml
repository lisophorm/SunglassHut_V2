<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" viewActivate="view1_activateHandler(event)" 
		creationComplete="view1_creationCompleteHandler(event)" removing="view1_removingHandler(event)" xmlns:components="components.*"  >
	
	<fx:Script>
		<![CDATA[
			import com.alfo.DelayedExecution;
			import com.alfo.utils.EncryptWrapper;
			import com.lia.crypto.AES;
			
			import events.KioskError;
			import events.UserEvent;
			import events.ViewEvent;
			
			import flash.media.StageWebView;
			import flash.net.URLRequest;
			import flash.utils.clearInterval;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.ViewNavigatorEvent;
			
			protected var webView:StageWebView = new StageWebView();
			protected var openBrowser:Boolean = false; 
			
			private var fbLogout:String;
			
			
			public var access_token:String;
			public var currentURN:String;
			public var optin_marketing:Boolean;
			public var optin_terms:Boolean;

			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				
				//fbLogout = (this.parentApplication).baseURL+"forcelogout.php"; // &display=touch publish_checkins ,offline_access
				fbLogout="http://www.facebook.com";
				createBrowser();
			}
			
			protected function view1_activateHandler(event:Event):void
			{
				
				currentURN=data.urn;
				optin_marketing = data.optin_marketing;
				optin_terms = data.optin_terms;
				
			}
			
			protected function onURLChanging(event:LocationChangeEvent):void
			{
				trace("URL changing "+event.location);
				//webView.viewPort = new Rectangle(0,0,0,0);
				status_label.text = "URL CHANGING "+event.location;
				webView.stage  =null;
				// Uncomment the following line to load in the default browser instead... 
				//navigateToURL(new URLRequest(event.location));
			}
			
			protected function onURLChange(event:LocationChangeEvent):void
			{
				
				trace("URL change "+event.location);
				var punto:Point=container.localToGlobal(new Point());
				status_label.text = "URL CHANGED "+event.location;
				webView.stage  =null;
			}
			protected function onURLCompleted( e:Event ):void
			{
				trace("URL LOADED");
				status_label.text = "URL LOADING COMPLETE";
				webView.stage = stage;
			
				webView.removeEventListener(LocationChangeEvent.LOCATION_CHANGING,onURLChanging);
				webView.removeEventListener(LocationChangeEvent.LOCATION_CHANGE,onURLChange);	
				webView.removeEventListener( Event.COMPLETE, onURLChanging);	

			}
			
			protected function createBrowser():void 
			{
				trace("CREATING BROWSER");
				var punto:Point=container.localToGlobal(new Point(0,0));
				
				
				webView.viewPort = new Rectangle(punto.x, punto.y, container.width, container.height);
				busone.x=container.width/2-50;
				busone.y=container.height/2-50;
				
				webView.addEventListener( Event.COMPLETE, onURLCompleted);	 // FIRES WHEN LOADING IS DONE
				webView.addEventListener(LocationChangeEvent.LOCATION_CHANGE,onURLChange);	// NOT ALWAYS FIRING
				webView.addEventListener(LocationChangeEvent.LOCATION_CHANGING,onURLChanging);
				
				webView.loadURL(this.fbLogout);	
				
			}
			
		
			
			protected function view1_removingHandler(event:ViewNavigatorEvent):void
			{
				webView.removeEventListener(LocationChangeEvent.LOCATION_CHANGING,onURLChanging);
				webView.removeEventListener(LocationChangeEvent.LOCATION_CHANGE,onURLChange);	
				webView.removeEventListener( Event.COMPLETE, onURLChanging);	
				this.webView.dispose();

			}
			protected function ricomincia(e:Event=null):void
			{
				NativeApplication.nativeApplication.exit();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	

	<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
		<s:Label id="status_label" includeInLayout="false" text="status" color="0x000000" />
		<s:BorderContainer width="100%" height="100%" id="container">
			<s:BusyIndicator horizontalCenter="0" verticalCenter="0" width="100" height="100" rotationInterval="200" symbolColor="#1caed0" id="busone" />
		</s:BorderContainer>
	</s:VGroup>
</s:View>
